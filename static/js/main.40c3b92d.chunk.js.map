{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleString","timerId","setInterval","console","log","this","props","clockName","setState","toLocaleTimeString","prevProps","clearInterval","React","Component","App","isClockVisible","showClock","hideClock","randomName","Math","floor","random","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,kBAFrB,EAKEC,QAAUC,aAAY,cAAU,KALlC,uDAOE,WAAqB,IAAD,OAElBC,QAAQC,IAAR,qBAA0BC,KAAKC,MAAMC,UAArC,2BAAiEF,KAAKR,MAAMC,KAA5E,MAEAO,KAAKJ,QAAUC,aAAY,WACzB,EAAKM,SAAS,CACZV,MAAM,IAAIC,MAAOU,4BAbzB,gCAkBE,SAAmBC,GACbA,EAAUH,YAAcF,KAAKC,MAAMC,WAErCJ,QAAQC,IAAR,sCAA2CM,EAAUH,UAArD,gBAAsEF,KAAKC,MAAMC,UAAjF,eAAiGF,KAAKR,MAAMC,KAA5G,QArBN,kCAyBE,WAEEK,QAAQC,IAAR,qBAA0BC,KAAKC,MAAMC,UAArC,0BAAgEF,KAAKR,MAAMC,KAA3E,MAEAa,cAAcN,KAAKJ,WA7BvB,oBAgCE,WACE,OACE,qBAAK,UAAQ,OAAb,SACGI,KAAKR,MAAMC,KAAKE,uBAnCzB,GAA2BY,IAAMC,WCC3BC,E,4MACJjB,MAAQ,CACNU,UAAW,EACXQ,gBAAgB,G,EAGlBC,UAAY,WACV,EAAKR,SAAS,CACZO,gBAAgB,K,EAIpBE,UAAY,WACV,EAAKT,SAAS,CACZO,gBAAgB,K,EAIpBG,WAAa,WACX,EAAKV,SAAS,CACZD,UAAWY,KAAKC,MAAsB,GAAhBD,KAAKE,a,4CAI/B,WACE,MAAsChB,KAAKR,MAAnCU,EAAR,EAAQA,UAAWQ,EAAnB,EAAmBA,eAEnB,OACE,iDACaR,GACX,uBACCQ,GAAkB,cAAC,EAAD,CAAOR,UAAWA,IAErC,gCACE,wBACEe,KAAK,SACLC,QAASlB,KAAKW,UACdQ,SAAUT,EAHZ,uBAQA,wBACEO,KAAK,SACLC,QAASlB,KAAKY,UACdO,UAAWT,EAHb,uBAQA,wBACEO,KAAK,SACLC,QAASlB,KAAKa,WAFhB,kC,GAlDQN,IAAMC,WA8DTC,ICtEfW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.40c3b92d.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: number\n};\n\ntype State = {\n  time: string\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toLocaleString(),\n  };\n\n  timerId = setInterval(() => {}, 1000);\n\n  componentDidMount() {\n    // eslint-disable-next-line\n    console.log(`The Clock #${this.props.clockName} was showed at: ${this.state.time}.`);\n\n    this.timerId = setInterval(() => {\n      this.setState({\n        time: new Date().toLocaleTimeString(),\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from #${prevProps.clockName} to #${this.props.clockName} at:${this.state.time}.`);\n    }\n  }\n\n  componentWillUnmount() {\n    // eslint-disable-next-line\n    console.log(`The Clock #${this.props.clockName} was hided at: ${this.state.time}.`);\n\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div data-cy=\"time\">\n        {this.state.time.toLocaleString()}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ntype Props = {};\n\ntype State = {\n  clockName: number,\n  isClockVisible: boolean,\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    clockName: 1,\n    isClockVisible: true,\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  randomName = () => {\n    this.setState({\n      clockName: Math.floor(Math.random() * 10),\n    });\n  };\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div>\n        {`Clock: ${clockName}`}\n        <br />\n        {isClockVisible && <Clock clockName={clockName} />}\n\n        <div>\n          <button\n            type=\"submit\"\n            onClick={this.showClock}\n            disabled={isClockVisible}\n          >\n            showClock\n          </button>\n\n          <button\n            type=\"submit\"\n            onClick={this.hideClock}\n            disabled={!isClockVisible}\n          >\n            hideClock\n          </button>\n\n          <button\n            type=\"submit\"\n            onClick={this.randomName}\n          >\n            randomName\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}