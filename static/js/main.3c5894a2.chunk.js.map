{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","toLocaleTimeString","timerId","setInterval","this","newDate","setState","console","log","prevProps","clockName","props","clearInterval","React","Component","App","isClockVisible","showClock","hideClock","randomName","Math","floor","random","className","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,QAAwBC,aAAY,cAAU,GALhD,uDAOE,WAAqB,IAAD,OAClBC,KAAKF,QAAUC,aAAY,WACzB,IAAME,EAAgB,IAAIL,KAE1B,EAAKM,SAAS,CACZP,KAAMM,EAAQJ,uBAGhBM,QAAQC,IAAI,EAAKV,MAAMC,QACtB,OAhBP,gCAmBE,SAAmBU,GACbA,EAAUC,YAAcN,KAAKO,MAAMD,WAErCH,QAAQC,IAAR,sCAA2CC,EAAUC,UAArD,gBAAsEN,KAAKO,MAAMD,UAAjF,eAAiGN,KAAKN,MAAMC,KAA5G,QAtBN,kCA0BE,WACEa,cAAcR,KAAKF,WA3BvB,oBA8BE,WACE,OACE,qBAAK,UAAQ,OAAb,SACGE,KAAKN,MAAMC,WAjCpB,GAA2Bc,IAAMC,WCC3BC,E,4MACJjB,MAAQ,CACNY,UAAW,EACXM,gBAAgB,G,EAGlBC,UAAY,WACV,EAAKX,SAAS,CACZU,gBAAgB,K,EAIpBE,UAAY,WACV,EAAKZ,SAAS,CACZU,gBAAgB,K,EAIpBG,WAAa,WACX,EAAKb,SAAS,CACZI,UAAWU,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,K,4CAIhD,WACE,MAAsClB,KAAKN,MAAnCY,EAAR,EAAQA,UAAWM,EAAnB,EAAmBA,eAEnB,OACE,sBAAKO,UAAU,MAAf,2BACab,GACX,uBACCM,GAAkB,cAAC,EAAD,CAAON,UAAWA,IAErC,wBACEc,KAAK,SACLC,QAASrB,KAAKa,UACdS,SAAUV,EAHZ,wBAQA,wBACEQ,KAAK,SACLC,QAASrB,KAAKc,UACdQ,UAAWV,EAHb,wBAQA,wBACEQ,KAAK,SACLC,QAASrB,KAAKe,WACdO,UAAWV,EAHb,gC,GAjDUH,IAAMC,WA6DTC,ICrEfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3c5894a2.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: number\n};\n\ntype State = {\n  time: string | null\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timerId: NodeJS.Timer = setInterval(() => {}, 0);\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      const newDate: Date = new Date();\n\n      this.setState({\n        time: newDate.toLocaleTimeString(),\n      });\n      // eslint-disable-next-line no-console\n      console.log(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>) {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from #${prevProps.clockName} to #${this.props.clockName} at:${this.state.time}.`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div data-cy=\"time\">\n        {this.state.time}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ntype Props = {};\n\ntype State = {\n  clockName: number,\n  isClockVisible: boolean,\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    clockName: 0,\n    isClockVisible: true,\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  randomName = () => {\n    this.setState({\n      clockName: Math.floor(Math.random() * 10) + 1,\n    });\n  };\n\n  render() {\n    const { clockName, isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        {`Clock #${clockName}`}\n        <br />\n        {isClockVisible && <Clock clockName={clockName} />}\n\n        <button\n          type=\"submit\"\n          onClick={this.showClock}\n          disabled={isClockVisible}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"submit\"\n          onClick={this.hideClock}\n          disabled={!isClockVisible}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"submit\"\n          onClick={this.randomName}\n          disabled={!isClockVisible}\n        >\n          Random Name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}